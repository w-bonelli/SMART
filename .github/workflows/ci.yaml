name: CI
on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop
jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Slack start notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: plantit-dev
          SLACK_ICON: https://raw.githubusercontent.com/Computational-Plant-Science/SMART/master/rosette_logo.jpg
          SLACK_MESSAGE: 'Build started'
          SLACK_TITLE: "SMART"
          SLACK_USERNAME: SMART
  test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        python-version: [ 3.8 ]
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 pytest coveralls
          python -m pip install .

          # temp
          exit 1
  publish:
    runs-on: ubuntu-latest
    needs: test
    strategy:
      max-parallel: 1
      matrix:
        python-version: [ 3.8 ]
    steps:
      - uses: actions/checkout@v2
      - name: set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 pytest coveralls setuptools wheel twine
          python -m pip install -e .
      - name: Publish package
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          old_version=$(pip install smart-arabidopsis-traits==random 2>&1 >/dev/null | sed 's|.*, \([^ ]*\)).*|\1|g' | head -n 1 | xargs)
          new_version=$(pip show smart-arabidopsis-traits | sed 's|.*Version: \([^ ]*\).*|\1|g' | sed -n 2p)
          echo "$old_version"
          echo "$new_version"
          if ! [[ "$new_version" = "$old_version" ]]; then
            echo "Publishing new version $new_version to PyPI"
            python3 setup.py sdist bdist_wheel
            python3 -m twine upload dist/*
          else
            echo "Not publishing to PyPI"
          fi
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build & publish container
        run: |
          docker build -t computationalplantscience/smart -f Dockerfile .
          docker push computationalplantscience/smart
      - name: Slack success notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: plantit-dev
          SLACK_ICON: https://raw.githubusercontent.com/Computational-Plant-Science/SMART/master/rosette_logo.jpg
          SLACK_MESSAGE: 'Build succeeded'
          SLACK_TITLE: 'SMART'
          SLACK_USERNAME: SMART
